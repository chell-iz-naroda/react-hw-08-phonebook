{"version":3,"file":"static/js/272.351cee24.chunk.js","mappings":"4NAAaA,EAAe,SAAAC,GAAK,OAAIA,EAAMC,OAAOC,KAAM,ECG3CC,EAAiB,SAAAH,GAAK,OAAIA,EAAMI,SAASC,KAAM,EAC/CC,EAAkB,SAAAN,GAAK,OAAIA,EAAMI,SAASG,SAAU,EAGpDC,GAAwBC,EAAAA,EAAAA,IACjC,CAACN,EAAgBJ,IACjB,SAACK,EAAUM,GACP,IAAMC,EAAmBD,EAAQE,cACjC,OAAuC,IAAnCD,EAAiBE,OAAOC,OACjBV,EAEJA,EAASH,QAAQ,SAAAc,GACpB,OAAOA,EAAIC,KAAKJ,cAAcK,SAASN,EAC3C,GACJ,I,qHCDSO,EAAgB,WAEzB,IAAMd,GAAWe,EAAAA,EAAAA,IAAYX,GACvBY,GAAWC,EAAAA,EAAAA,MAMjB,SAASC,EAAcC,GACnB,IACIC,EADAC,EAAO,EAIX,IAAKD,EAAI,EAAGA,EAAID,EAAOT,OAAQU,GAAK,EAChCC,EAAOF,EAAOG,WAAWF,KAAOC,GAAQ,GAAKA,GAGjD,IAAIE,EAAQ,IAEZ,IAAKH,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAEvBG,GAAS,KAAAC,QADMH,GAAa,EAAJD,EAAU,KACdK,SAAS,KAAMC,OAAO,EAC9C,CAGA,OAAOH,CACX,CAEA,SAASI,EAAaf,GAClB,MAAO,CACHgB,GAAI,CACAC,QAASX,EAAcN,IAE3BkB,SAAS,GAADN,OAAKZ,EAAKmB,MAAM,KAAK,GAAG,IAAEP,YAA0BQ,IAAvBpB,EAAKmB,MAAM,KAAK,GAAmBnB,EAAKmB,MAAM,KAAK,GAAG,GAAK,IAExG,CAGA,OAAO/B,EAASU,OAAS,GACrBuB,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACN,GAAI,CACNO,QAAS,OACTC,SAAU,OACVC,IAAK,EACLC,cAAe,OACjBR,SACG9B,EAASuC,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAI7B,EAAI4B,EAAJ5B,KAAM8B,EAAMF,EAANE,OAAM,OAC7BC,EAAAA,EAAAA,MAACC,EAAAA,GAAQ,CAAUhB,GAAI,CACnBiB,MAAO,sBACPV,QAAS,OACTG,cAAe,MACfQ,WAAY,SACZC,eAAgB,gBAChBC,aAAc,GACdC,UAAW,wBACbnB,SAAA,EACEG,EAAAA,EAAAA,KAACiB,EAAAA,GAAMC,EAAAA,EAAAA,GAAA,GAAKxB,EAAa,GAADH,OAAIZ,OAC5B+B,EAAAA,EAAAA,MAACS,EAAAA,GAAI,CAACxB,GAAI,CAAEiB,MAAO,OAAQQ,SAAU,IAAKC,SAAU,cAAexB,SAAA,EAC/DG,EAAAA,EAAAA,KAACsB,EAAAA,EAAY,CAAAzB,UACTG,EAAAA,EAAAA,KAACuB,EAAAA,EAAU,CAAA1B,SAAElB,OAEjBqB,EAAAA,EAAAA,KAACsB,EAAAA,EAAY,CAAAzB,UACTG,EAAAA,EAAAA,KAACuB,EAAAA,EAAU,CAAA1B,SAAEY,UAGrBT,EAAAA,EAAAA,KAACwB,EAAAA,EAAO,CAACC,MAAM,SAASC,QAAS,kBA5D/BC,EA4D8CnB,OA3D5DzB,GAAS6C,EAAAA,EAAAA,IAAcD,IADV,IAACA,CA4DiD,EAAC9B,UAChDG,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAAAhC,UACPG,EAAAA,EAAAA,KAAC8B,EAAAA,EAAU,UApBRtB,EAuBJ,OAInBR,EAAAA,EAAAA,KAACuB,EAAAA,EAAU,CAAC5B,GAAI,CAAEoC,GAAI,EAAGC,GAAI,GAAInC,SAAC,kCAI1C,E,gFCrFaoC,EAAS,WAElB,IAAMlD,GAAWC,EAAAA,EAAAA,MACXpB,GAASkB,EAAAA,EAAAA,IAAYpB,GAQ3B,OACIgD,EAAAA,EAAAA,MAACS,EAAAA,GAAI,CAACe,UAAU,SAAQrC,SAAA,EACxBG,EAAAA,EAAAA,KAACuB,EAAAA,EAAU,CAAC5B,GAAI,CAACoC,GAAI,GAAGlC,SAAC,2BACrBG,EAAAA,EAAAA,KAACmC,EAAAA,EAAS,CACNC,KAAK,OACLzD,KAAK,SACLd,MAAOD,EACPyE,SAAU,SAAAC,GAbL,IAAAC,KAaqBD,EAAIE,OAAO3E,QAZhC0E,EAAU9D,OAAS,EAC5BM,GAAS0D,EAAAA,EAAAA,IAAaF,IACpBxD,GAAS0D,EAAAA,EAAAA,IAAa,IAUuB,EAC3C9C,GAAI,CAACoC,GAAI,OAIzB,E,UCZMW,EAAqB,CACvB/D,KAAM,GACNgE,YAAa,IAIJC,EAAgB,WAAO,IAADC,EAAAC,EAEzB/E,GAAWe,EAAAA,EAAAA,IAAYhB,GACvBiB,GAAWC,EAAAA,EAAAA,MAEjB+D,GAA4BC,EAAAA,EAAAA,UAASN,GAAmBO,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjDI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GASlBI,EAAmBC,EAAAA,KAAaC,MAAM,CACxC5E,KAAM2E,EAAAA,KAAaE,IAAI,EAAG,cAAcC,QAJzB,yHAI6C,+DAA+DC,SAAS,4BACpIf,YAAaW,EAAAA,KAAaG,QAJV,6EAI+B,gGAAgGE,IAAI,GAAI,4BAA4BD,SAAS,gCAGhME,GAIIC,EAAAA,EAAAA,IAAQ,CACRC,UAAUC,EAAAA,EAAAA,GAAYV,GACtBW,KAAM,WALNC,EAAQL,EAARK,SACAC,EAAYN,EAAZM,aACaC,EAAMP,EAAnBQ,UAAaD,OAMXE,EAAe,SAACxG,GAClBuF,EAAUvF,EACd,EAaA,OACI6C,EAAAA,EAAAA,MAAC4D,EAAAA,EAAG,CAAC3E,GAAI,CACLO,QAAS,OACTE,IAAK,EACLC,cAAe,OACjBR,SAAA,EACEG,EAAAA,EAAAA,KAACsE,EAAAA,EAAG,CAACC,UAAU,OAAOC,SAAUN,GAhBxB,SAACO,GACb,IAAQ9F,EAAsB8F,EAAtB9F,KAAMgE,EAAgB8B,EAAhB9B,YACd5E,EAAS2G,MAAK,SAAAC,GAAO,OAAIA,EAAQhG,KAAKJ,gBAAkBI,EAAKJ,aAAa,IACpEqG,EAAAA,GAAAA,MAAY,WAADrF,OAAYZ,EAAI,iDAC3BI,GAAS8F,EAAAA,EAAAA,IAAW,CAClBlG,KAAMA,EACN8B,OAAQkC,MA/BhBS,EAAUV,EAiCd,IAQ+D/C,GAAI,CAAEoC,GAAI,GAAIlC,UACjEa,EAAAA,EAAAA,MAACS,EAAAA,GAAI,CAAC2D,WAAS,EAACC,QAAS,EAAGpF,GAAI,CAC5BO,QAAS,OACTG,cAAe,SACfQ,WAAY,SACZO,SAAU,SACZvB,SAAA,EACEG,EAAAA,EAAAA,KAACuB,EAAAA,EAAU,CAACgD,UAAU,KAAKS,QAAQ,KAAInF,SAAC,iBAGxCG,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CAAC8D,MAAI,EAACC,GAAI,GAAGrF,UACdG,EAAAA,EAAAA,KAACmC,EAAAA,GAASjB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACNiE,YAAY,OACZxG,KAAK,OACLyG,MAAM,OACN1B,UAAQ,GACJO,EAAS,SAAO,IACpBoB,QAAOlB,EAAOxF,KACd2G,WAAuB,QAAbzC,EAAEsB,EAAOxF,YAAI,IAAAkE,OAAA,EAAXA,EAAa0C,QACzB1H,MAAOsF,EAAOxE,KACd0D,SAAU,SAACmD,GAAK,OAAKnB,GAAYnD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIiC,GAAM,IAAExE,KAAM6G,EAAMhD,OAAO3E,QAAQ,QAGlFmC,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CAAC8D,MAAI,EAACC,GAAI,GAAGrF,UACdG,EAAAA,EAAAA,KAACmC,EAAAA,GAASjB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACNiE,YAAY,eACZxG,KAAK,cACLyG,MAAM,eACN1B,UAAQ,GACJO,EAAS,gBAAc,IAC3BoB,QAAOlB,EAAOxB,YACd2C,WAA8B,QAApBxC,EAAEqB,EAAOxB,mBAAW,IAAAG,OAAA,EAAlBA,EAAoByC,QAChC1H,MAAOsF,EAAOR,YACdN,SAAU,SAACmD,GAAK,OAAKnB,GAAYnD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIiC,GAAM,IAAER,YAAa6C,EAAMhD,OAAO3E,QAAQ,QAGzFmC,EAAAA,EAAAA,KAACyF,EAAAA,EAAM,CACHrD,KAAK,SACL4C,QAAQ,YACRrF,GAAI,CAAEoC,GAAI,EAAGC,GAAI,GAAInC,SACxB,sBAKTG,EAAAA,EAAAA,KAACiC,EAAM,MAGnB,E,UC9Ge,SAASyD,IACpB,IAAM3G,GAAWC,EAAAA,EAAAA,MACXd,GAAYY,EAAAA,EAAAA,IAAYb,GAM9B,OAJA0H,EAAAA,EAAAA,YAAU,WACN5G,GAAS6G,EAAAA,EAAAA,MACb,GAAG,CAAC7G,KAGA2B,EAAAA,EAAAA,MAAAmF,EAAAA,SAAA,CAAAhG,SAAA,EACIG,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAAAjG,UACHG,EAAAA,EAAAA,KAAA,SAAAH,SAAO,qBAEXG,EAAAA,EAAAA,KAAC4C,EAAa,KACd5C,EAAAA,EAAAA,KAACuB,EAAAA,EAAU,CAACgD,UAAU,KAAKS,QAAQ,KAAKrF,GAAI,CAAEoC,GAAI,EAAGC,GAAI,EAAG+D,GAAI,GAAIlG,SAAC,iBAGpE3B,GACD8B,EAAAA,EAAAA,KAACsE,EAAAA,EAAG,CAAC3E,GAAI,CAAEO,QAAS,OAAQ8F,aAAc,UAAWnG,UACjDG,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,OAEnBjG,EAAAA,EAAAA,KAACnB,EAAa,MAG5B,C","sources":["redux/filter/selectors.js","redux/contacts/selectors.js","components/PhonebookList/PhonebookList.js","components/Filter/Filter.js","components/PhonebookForm/PhonebookForm.js","pages/Contacts.js"],"sourcesContent":["export const selectFilter = state => state.filter.value;","import { createSelector } from \"@reduxjs/toolkit\";\nimport { selectFilter } from \"redux/filter/selectors\";\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n    [selectContacts, selectFilter],\n    (contacts, filters) => {\n        const lowerCaseContact = filters.toLowerCase();\n        if (lowerCaseContact.trim().length === 0) {\n            return contacts;\n        }\n        return contacts.filter (cnt => {\n            return cnt.name.toLowerCase().includes(lowerCaseContact);\n        })\n    }\n);","import { selectVisibleContacts } from '../../redux/contacts/selectors';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\nimport { Grid } from '@mui/material';\n\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\n\n\nexport const PhonebookList = () => {\n\n    const contacts = useSelector(selectVisibleContacts);\n    const dispatch = useDispatch();\n\n    const onDelete = (contactId) => {\n        dispatch(deleteContact(contactId));\n    };\n\n    function stringToColor(string) {\n        let hash = 0;\n        let i;\n\n        /* eslint-disable no-bitwise */\n        for (i = 0; i < string.length; i += 1) {\n            hash = string.charCodeAt(i) + ((hash << 5) - hash);\n        }\n\n        let color = '#';\n\n        for (i = 0; i < 3; i += 1) {\n            const value = (hash >> (i * 8)) & 0xff;\n            color += `00${value.toString(16)}`.slice(-2);\n        }\n        /* eslint-enable no-bitwise */\n\n        return color;\n    }\n\n    function stringAvatar(name) {\n        return {\n            sx: {\n                bgcolor: stringToColor(name),\n            },\n            children: `${name.split(' ')[0][0]}${name.split(' ')[1] !== undefined ? name.split(' ')[1][0] : ''}`,\n        };\n    }\n\n\n    return contacts.length > 0 ? (\n        <List sx={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            gap: 2,\n            flexDirection: 'row'\n        }}>\n            {contacts.map(({ id, name, number }) => (\n                <ListItem key={id} sx={{\n                    width: 'calc(33% - 4 * 2px)',\n                    display: 'flex',\n                    flexDirection: 'row',\n                    alignItems: 'center',\n                    justifyContent: 'space-between',\n                    borderRadius: 10,\n                    boxShadow: '5px 5px 5px 5px grey'\n                }}>\n                    <Avatar {...stringAvatar(`${name}`)} />\n                    <Grid sx={{ width: '100%', maxWidth: 144, wordWrap: 'break-word' }}>\n                        <ListItemText>\n                            <Typography>{name}</Typography>\n                        </ListItemText>\n                        <ListItemText>\n                            <Typography>{number}</Typography>\n                        </ListItemText>\n                    </Grid>\n                    <Tooltip title=\"Delete\" onClick={() => onDelete(id)}>\n                        <IconButton>\n                            <DeleteIcon />\n                        </IconButton>\n                    </Tooltip>\n                </ListItem>\n            ))}\n        </List>\n    ) : (\n        <Typography sx={{ mt: 3, mb: 2 }}>\n            Not contacts you phonebook....\n        </Typography>\n    );\n}   ","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from '../../redux/filter/slice';\nimport { selectFilter } from '../../redux/filter/selectors';\n\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\n\n\nexport const Filter = () => {\n\n    const dispatch = useDispatch();\n    const filter = useSelector(selectFilter);\n\n    const onChange = newFilter => {\n        newFilter && newFilter.length > 0 ?\n            dispatch(changeFilter(newFilter))\n            : dispatch(changeFilter(''));\n    };\n\n    return (\n        <Grid textAlign='center'>\n        <Typography sx={{mt: 2}}>Find contact by name </Typography>\n            <TextField\n                type=\"text\"\n                name=\"filter\"\n                value={filter}\n                onChange={evt => onChange(evt.target.value)}\n                sx={{mt: 2}}\n            />\n        </Grid>\n    );\n};    ","// import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport { Typography } from '@mui/material';\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport { useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/operations';\n\nimport { Filter } from 'components/Filter/Filter';\n\nimport toast from 'react-hot-toast';\n\nconst defaultInputValues = {\n    name: '',\n    phoneNumber: ''\n};\n\n\nexport const PhonebookForm = () => {\n\n    const contacts = useSelector(selectContacts);\n    const dispatch = useDispatch();\n\n    const [values, setValues] = useState(defaultInputValues);\n\n    const resetForm = () => {\n        setValues(defaultInputValues);\n    };\n\n    const nameRegExp = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n    const phoneRegExp = /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\n    const validationSchema = Yup.object().shape({\n        name: Yup.string().min(2, 'Too Short!').matches(nameRegExp, \"Name may contain only letters, apostrophe, dash and spaces.\").required('Name is a required field'),\n        phoneNumber: Yup.string().matches(phoneRegExp, 'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +').max(15, 'Too Long! Max 15 numbers').required('Number is a required field'),\n    });\n\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm({\n        resolver: yupResolver(validationSchema),\n        mode: \"onBlur\"\n    });\n\n    const handleChange = (value) => {\n        setValues(value);\n    };\n\n\n    const addUser = (newContact) => {\n        const { name, phoneNumber } = newContact;\n        contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())\n            ? toast.error(`Contact ${name} already exists. Please, choose another name`)\n            : dispatch(addContact({\n                name: name,\n                number: phoneNumber,\n            })) && resetForm();\n    };\n\n    return (\n        <Box sx={{\n            display: 'flex',\n            gap: 8,\n            flexDirection: 'row'\n        }}>\n            <Box component=\"form\" onSubmit={handleSubmit(addUser)} sx={{ mt: 3 }}>\n                <Grid container spacing={2} sx={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    maxWidth: '226px'\n                }}>\n                    <Typography component=\"h2\" variant=\"h5\">\n                        New contact\n                    </Typography>\n                    <Grid item xs={12}>\n                        <TextField\n                            placeholder=\"Name\"\n                            name=\"name\"\n                            label=\"Name\"\n                            required\n                            {...register('name')}\n                            error={errors.name ? true : false}\n                            helperText={errors.name?.message}\n                            value={values.name}\n                            onChange={(event) => handleChange({ ...values, name: event.target.value })}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            placeholder=\"Phone number\"\n                            name=\"phoneNumber\"\n                            label=\"Phone number\"\n                            required\n                            {...register('phoneNumber')}\n                            error={errors.phoneNumber ? true : false}\n                            helperText={errors.phoneNumber?.message}\n                            value={values.phoneNumber}\n                            onChange={(event) => handleChange({ ...values, phoneNumber: event.target.value })}\n                        />\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        sx={{ mt: 3, mb: 2 }}\n                    >\n                        Add to list\n                    </Button>\n                </Grid>\n            </Box>\n            <Filter />\n        </Box>\n    );\n};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { selectIsLoading } from '../redux/contacts/selectors';\n\nimport { PhonebookList } from 'components/PhonebookList/PhonebookList';\nimport { PhonebookForm } from 'components/PhonebookForm/PhonebookForm';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport Typography from '@mui/material/Typography';\n\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <>\n            <Helmet>\n                <title>Your contacts</title>\n            </Helmet>\n            <PhonebookForm />\n            <Typography component=\"h2\" variant=\"h5\" sx={{ mt: 3, mb: 3, ml: 4 }}>\n                Contact list\n            </Typography>\n            {isLoading ?\n            <Box sx={{ display: 'flex', alignContent: 'center' }}>\n                <CircularProgress />\n            </Box>\n            : <PhonebookList />}\n        </>\n    );\n}\n"],"names":["selectFilter","state","filter","value","selectContacts","contacts","items","selectIsLoading","isLoading","selectVisibleContacts","createSelector","filters","lowerCaseContact","toLowerCase","trim","length","cnt","name","includes","PhonebookList","useSelector","dispatch","useDispatch","stringToColor","string","i","hash","charCodeAt","color","concat","toString","slice","stringAvatar","sx","bgcolor","children","split","undefined","_jsx","List","display","flexWrap","gap","flexDirection","map","_ref","id","number","_jsxs","ListItem","width","alignItems","justifyContent","borderRadius","boxShadow","Avatar","_objectSpread","Grid","maxWidth","wordWrap","ListItemText","Typography","Tooltip","title","onClick","contactId","deleteContact","IconButton","DeleteIcon","mt","mb","Filter","textAlign","TextField","type","onChange","evt","newFilter","target","changeFilter","defaultInputValues","phoneNumber","PhonebookForm","_errors$name","_errors$phoneNumber","_useState","useState","_useState2","_slicedToArray","values","setValues","validationSchema","Yup","shape","min","matches","required","max","_useForm","useForm","resolver","yupResolver","mode","register","handleSubmit","errors","formState","handleChange","Box","component","onSubmit","newContact","find","contact","toast","addContact","container","spacing","variant","item","xs","placeholder","label","error","helperText","message","event","Button","Contacts","useEffect","fetchContacts","_Fragment","Helmet","ml","alignContent","CircularProgress"],"sourceRoot":""}